{"ast":null,"code":"var _jsxFileName = \"D:\\\\FullStack\\\\ResuNinja\\\\frontend\\\\src\\\\context\\\\UserContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\n\n// Create UserContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext();\n\n// Custom hook to use UserContext easily\nexport const useUser = () => {\n  _s();\n  return useContext(UserContext);\n};\n\n// UserProvider to wrap the app and provide user state\n_s(useUser, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function UserProvider({\n  children\n}) {\n  _s2();\n  const [user, setUser] = useState({});\n\n  // Sync user state with localStorage on mount\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      setUser({\n        username: storedUser\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      setUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s2(UserProvider, \"l0nCqodPWuiGgcnCHidP90F0Gls=\");\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","UserContext","useUser","_s","UserProvider","children","_s2","user","setUser","storedUser","localStorage","getItem","username","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/FullStack/ResuNinja/frontend/src/context/UserContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\n\r\n// Create UserContext\r\nconst UserContext = createContext();\r\n\r\n// Custom hook to use UserContext easily\r\nexport const useUser = () => useContext(UserContext);\r\n\r\n// UserProvider to wrap the app and provide user state\r\nexport function UserProvider({ children }) {\r\n    const [user, setUser] = useState({});\r\n\r\n    // Sync user state with localStorage on mount\r\n    useEffect(() => {\r\n        const storedUser = localStorage.getItem('user');\r\n        if (storedUser) {\r\n            setUser({ username: storedUser });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <UserContext.Provider value={{ user, setUser }}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    );\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;;AAE7E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMO,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMN,UAAU,CAACI,WAAW,CAAC;AAAA;;AAEpD;AAAAE,EAAA,CAFaD,OAAO;AAGpB,OAAO,SAASE,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EACvC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEpC;EACAE,SAAS,CAAC,MAAM;IACZ,MAAMW,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,IAAIF,UAAU,EAAE;MACZD,OAAO,CAAC;QAAEI,QAAQ,EAAEH;MAAW,CAAC,CAAC;IACrC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIT,OAAA,CAACC,WAAW,CAACY,QAAQ;IAACC,KAAK,EAAE;MAAEP,IAAI;MAAEC;IAAQ,CAAE;IAAAH,QAAA,EAC1CA;EAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B;AAACZ,GAAA,CAhBeF,YAAY;AAAAe,EAAA,GAAZf,YAAY;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}