{"ast":null,"code":"var _jsxFileName = \"D:\\\\FullStack\\\\ResuNinja\\\\frontend\\\\src\\\\components\\\\Logout.js\",\n  _s = $RefreshSig$();\nimport { useNavigate } from 'react-router-dom';\nimport { useAlert } from \"../context/AlertContext\";\nimport { useUser } from \"../context/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Logout() {\n  _s();\n  const {\n    setUser\n  } = useUser();\n  const {\n    addAlert\n  } = useAlert();\n  const navigate = useNavigate();\n  const refresh = localStorage.getItem('refresh_token');\n  const handleLogout = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/api/logout/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          refresh\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Logout Failed');\n      }\n\n      // Clear tokens and user data from local storage\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n      localStorage.removeItem('user');\n\n      // Reset user state in context\n      setUser({}); // Set to an empty object\n\n      addAlert('Logout successful!', 'success');\n      navigate('/login');\n    } catch (e) {\n      addAlert(e.message, 'error');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleLogout,\n    children: \"Logout\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(Logout, \"yepCTYhxqm5CA6opzi0Yr3Z6sHY=\", false, function () {\n  return [useUser, useAlert, useNavigate];\n});\n_c = Logout;\nvar _c;\n$RefreshReg$(_c, \"Logout\");","map":{"version":3,"names":["useNavigate","useAlert","useUser","jsxDEV","_jsxDEV","Logout","_s","setUser","addAlert","navigate","refresh","localStorage","getItem","handleLogout","response","fetch","method","headers","body","JSON","stringify","ok","Error","removeItem","e","message","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/FullStack/ResuNinja/frontend/src/components/Logout.js"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\r\nimport { useAlert } from \"../context/AlertContext\";\r\nimport { useUser } from \"../context/UserContext\";\r\n\r\nexport default function Logout() {\r\n    const { setUser } = useUser();\r\n    const { addAlert } = useAlert();\r\n    const navigate = useNavigate();\r\n\r\n    const refresh = localStorage.getItem('refresh_token');\r\n\r\n    const handleLogout = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:8000/api/logout/', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ refresh }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Logout Failed');\r\n            }\r\n\r\n            // Clear tokens and user data from local storage\r\n            localStorage.removeItem('access_token');\r\n            localStorage.removeItem('refresh_token');\r\n            localStorage.removeItem('user');\r\n\r\n            // Reset user state in context\r\n            setUser({}); // Set to an empty object\r\n\r\n            addAlert('Logout successful!', 'success');\r\n            navigate('/login');\r\n        } catch (e) {\r\n            addAlert(e.message, 'error');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <button onClick={handleLogout}>Logout</button>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,SAASC,OAAO,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM;IAAEC;EAAQ,CAAC,GAAGL,OAAO,CAAC,CAAC;EAC7B,MAAM;IAAEM;EAAS,CAAC,GAAGP,QAAQ,CAAC,CAAC;EAC/B,MAAMQ,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,OAAO,GAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;EAErD,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;QAC9DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEV;QAAQ,CAAC;MACpC,CAAC,CAAC;MAEF,IAAI,CAACI,QAAQ,CAACO,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;MACpC;;MAEA;MACAX,YAAY,CAACY,UAAU,CAAC,cAAc,CAAC;MACvCZ,YAAY,CAACY,UAAU,CAAC,eAAe,CAAC;MACxCZ,YAAY,CAACY,UAAU,CAAC,MAAM,CAAC;;MAE/B;MACAhB,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;MAEbC,QAAQ,CAAC,oBAAoB,EAAE,SAAS,CAAC;MACzCC,QAAQ,CAAC,QAAQ,CAAC;IACtB,CAAC,CAAC,OAAOe,CAAC,EAAE;MACRhB,QAAQ,CAACgB,CAAC,CAACC,OAAO,EAAE,OAAO,CAAC;IAChC;EACJ,CAAC;EAED,oBACIrB,OAAA;IAAQsB,OAAO,EAAEb,YAAa;IAAAc,QAAA,EAAC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEtD;AAACzB,EAAA,CAvCuBD,MAAM;EAAA,QACNH,OAAO,EACND,QAAQ,EACZD,WAAW;AAAA;AAAAgC,EAAA,GAHR3B,MAAM;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}