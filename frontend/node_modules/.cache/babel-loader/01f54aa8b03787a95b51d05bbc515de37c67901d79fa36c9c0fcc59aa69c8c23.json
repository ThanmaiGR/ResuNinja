{"ast":null,"code":"var _jsxFileName = \"D:\\\\FullStack\\\\ResuNinja\\\\frontend\\\\src\\\\context\\\\AlertContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/AlertContext.js\nimport { createContext, useState, useCallback, useContext } from 'react';\n\n// Create AlertContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AlertContext = /*#__PURE__*/createContext();\n\n// Custom hook to use the AlertContext\nexport const useAlert = () => {\n  _s();\n  return useContext(AlertContext);\n};\n\n// Provider component to wrap around App\n_s(useAlert, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AlertProvider({\n  children\n}) {\n  _s2();\n  const [alerts, setAlerts] = useState([]);\n\n  // Function to add new alerts\n  const addAlert = useCallback(newAlert => {\n    setAlerts(prevAlerts => [...prevAlerts, newAlert]);\n\n    // Clear alerts after 3 seconds\n    setTimeout(() => setAlerts([]), 30000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AlertContext.Provider, {\n    value: {\n      alerts,\n      addAlert\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s2(AlertProvider, \"NfipnDfBXqav0aYKU0yr3bEEwzE=\");\n_c = AlertProvider;\nvar _c;\n$RefreshReg$(_c, \"AlertProvider\");","map":{"version":3,"names":["createContext","useState","useCallback","useContext","jsxDEV","_jsxDEV","AlertContext","useAlert","_s","AlertProvider","children","_s2","alerts","setAlerts","addAlert","newAlert","prevAlerts","setTimeout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/FullStack/ResuNinja/frontend/src/context/AlertContext.js"],"sourcesContent":["// src/context/AlertContext.js\r\nimport { createContext, useState, useCallback, useContext } from 'react';\r\n\r\n// Create AlertContext\r\nconst AlertContext = createContext();\r\n\r\n// Custom hook to use the AlertContext\r\nexport const useAlert = () => useContext(AlertContext);\r\n\r\n// Provider component to wrap around App\r\nexport function AlertProvider({ children }) {\r\n    const [alerts, setAlerts] = useState([]);\r\n\r\n    // Function to add new alerts\r\n    const addAlert = useCallback((newAlert) => {\r\n        setAlerts((prevAlerts) => [...prevAlerts, newAlert]);\r\n\r\n        // Clear alerts after 3 seconds\r\n        setTimeout(() => setAlerts([]), 30000);\r\n    }, []);\r\n\r\n    return (\r\n        <AlertContext.Provider value={{ alerts, addAlert }}>\r\n            {children}\r\n        </AlertContext.Provider>\r\n    );\r\n}\r\n"],"mappings":";;;AAAA;AACA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,UAAU,QAAQ,OAAO;;AAExE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;;AAEpC;AACA,OAAO,MAAMO,QAAQ,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAML,UAAU,CAACG,YAAY,CAAC;AAAA;;AAEtD;AAAAE,EAAA,CAFaD,QAAQ;AAGrB,OAAO,SAASE,aAAaA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EACxC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA,MAAMa,QAAQ,GAAGZ,WAAW,CAAEa,QAAQ,IAAK;IACvCF,SAAS,CAAEG,UAAU,IAAK,CAAC,GAAGA,UAAU,EAAED,QAAQ,CAAC,CAAC;;IAEpD;IACAE,UAAU,CAAC,MAAMJ,SAAS,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIR,OAAA,CAACC,YAAY,CAACY,QAAQ;IAACC,KAAK,EAAE;MAAEP,MAAM;MAAEE;IAAS,CAAE;IAAAJ,QAAA,EAC9CA;EAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEhC;AAACZ,GAAA,CAhBeF,aAAa;AAAAe,EAAA,GAAbf,aAAa;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}