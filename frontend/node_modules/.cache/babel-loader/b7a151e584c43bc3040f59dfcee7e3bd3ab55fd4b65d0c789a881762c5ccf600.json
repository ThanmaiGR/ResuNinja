{"ast":null,"code":"var _jsxFileName = \"D:\\\\FullStack\\\\ResuNinja\\\\frontend\\\\src\\\\components\\\\LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/LoginForm.css';\nimport { useAlert } from '../context/AlertContext';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [user, setUser] = useState({});\n  const {\n    addAlert\n  } = useAlert();\n  const navigate = useNavigate();\n  function handleChange(e) {\n    setUser(prevData => {\n      return {\n        ...prevData,\n        [e.target.name]: e.target.value\n      };\n    });\n  }\n  const handleLogin = async e => {\n    e.preventDefault(); // Prevent the form from refreshing the page\n\n    try {\n      const response = await fetch('http://localhost:8000/api/login/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(user) // Assuming 'user' is { email, password }\n      });\n      if (!response.ok) {\n        throw new Error('Invalid email or password'); // Handle login failure\n      }\n      const data = await response.json();\n      console.log('Login successful!', data);\n      addAlert('Login successful!', 'success');\n\n      // Store tokens in localStorage\n      localStorage.setItem('access_token', data.access);\n      localStorage.setItem('refresh_token', data.refresh);\n      navigate('/', {\n        state: {\n          'user': user\n        }\n      });\n\n      // Optionally redirect to a protected page\n      // window.location.href = \"/dashboard\";\n    } catch (error) {\n      addAlert(error.message, 'error');\n      console.error('Login error:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: user.username,\n        name: \"username\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: user.password,\n        name: \"password\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onSubmit: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"c7dIsKDiBLk+cqCI0+zfCxqdynY=\", false, function () {\n  return [useAlert, useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useAlert","useNavigate","jsxDEV","_jsxDEV","LoginForm","_s","user","setUser","addAlert","navigate","handleChange","e","prevData","target","name","value","handleLogin","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","console","log","localStorage","setItem","access","refresh","state","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","username","onChange","placeholder","password","_c","$RefreshReg$"],"sources":["D:/FullStack/ResuNinja/frontend/src/components/LoginForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/LoginForm.css';\r\nimport { useAlert } from '../context/AlertContext';\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst LoginForm = () => {\r\n   const [user, setUser] = useState({});\r\n   const { addAlert } = useAlert();\r\n   const navigate = useNavigate();\r\n\r\n    function handleChange(e) {\r\n        setUser(prevData => {\r\n            return {\r\n                ...prevData,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        })\r\n    }\r\n const handleLogin = async (e) => {\r\n  e.preventDefault(); // Prevent the form from refreshing the page\r\n\r\n  try {\r\n    const response = await fetch('http://localhost:8000/api/login/', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(user), // Assuming 'user' is { email, password }\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Invalid email or password'); // Handle login failure\r\n    }\r\n\r\n    const data = await response.json();\r\n    console.log('Login successful!', data);\r\n    addAlert('Login successful!', 'success');\r\n\r\n    // Store tokens in localStorage\r\n    localStorage.setItem('access_token', data.access);\r\n    localStorage.setItem('refresh_token', data.refresh);\r\n    navigate('/', {state: {'user' : user}});\r\n\r\n    // Optionally redirect to a protected page\r\n    // window.location.href = \"/dashboard\";\r\n  } catch (error) {\r\n    addAlert(error.message, 'error');\r\n    console.error('Login error:', error.message);\r\n  }\r\n};\r\n\r\n\r\n  return (\r\n    <form className=\"form-container\">\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleLogin}>\r\n        <input\r\n            type=\"text\"\r\n            value={user.username}\r\n            name=\"username\"\r\n            onChange={handleChange}\r\n        />\r\n\r\n        <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            value={user.password}\r\n            name=\"password\"\r\n            onChange={handleChange}\r\n        />\r\n        <button type=\"submit\" onSubmit={handleLogin}>Login</button>\r\n      </form>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}