{"ast":null,"code":"var _jsxFileName = \"D:\\\\FullStack\\\\ResuNinja\\\\frontend\\\\src\\\\components\\\\Logout.js\",\n  _s = $RefreshSig$();\nimport { useNavigate } from 'react-router-dom';\nimport { useAlert } from \"../context/AlertContext\";\nimport { useUser } from \"../context/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Sidebar() {\n  _s();\n  const {\n    setUser\n  } = useUser();\n  const {\n    addAlert\n  } = useAlert();\n  const navigate = useNavigate();\n  const handleLogout = async () => {\n    const refresh = localStorage.getItem('refresh_token');\n    try {\n      const response = await fetch('http://localhost:8000/api/logout/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          refresh\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Logout Failed');\n      }\n\n      // Clear tokens and user data from local storage\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n      localStorage.removeItem('user');\n\n      // Reset user state in context\n      setUser({}); // Set to an empty object\n\n      addAlert('Logout successful!', 'success');\n      navigate('/login');\n    } catch (e) {\n      addAlert(e.message, 'error');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: handleLogout,\n      style: {\n        cursor: 'pointer'\n      },\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(Sidebar, \"yepCTYhxqm5CA6opzi0Yr3Z6sHY=\", false, function () {\n  return [useUser, useAlert, useNavigate];\n});\n_c = Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["useNavigate","useAlert","useUser","jsxDEV","_jsxDEV","Sidebar","_s","setUser","addAlert","navigate","handleLogout","refresh","localStorage","getItem","response","fetch","method","headers","body","JSON","stringify","ok","Error","removeItem","e","message","className","children","onClick","style","cursor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/FullStack/ResuNinja/frontend/src/components/Logout.js"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\r\nimport { useAlert } from \"../context/AlertContext\";\r\nimport { useUser } from \"../context/UserContext\";\r\n\r\nexport default function Sidebar() {\r\n    const { setUser } = useUser();\r\n    const { addAlert } = useAlert();\r\n    const navigate = useNavigate();\r\n\r\n    const handleLogout = async () => {\r\n        const refresh = localStorage.getItem('refresh_token');\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:8000/api/logout/', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ refresh }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Logout Failed');\r\n            }\r\n\r\n            // Clear tokens and user data from local storage\r\n            localStorage.removeItem('access_token');\r\n            localStorage.removeItem('refresh_token');\r\n            localStorage.removeItem('user');\r\n\r\n            // Reset user state in context\r\n            setUser({}); // Set to an empty object\r\n\r\n            addAlert('Logout successful!', 'success');\r\n            navigate('/login');\r\n        } catch (e) {\r\n            addAlert(e.message, 'error');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            {/* Other sidebar links */}\r\n            <div onClick={handleLogout} style={{ cursor: 'pointer' }}>\r\n                Logout\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,SAASC,OAAO,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM;IAAEC;EAAQ,CAAC,GAAGL,OAAO,CAAC,CAAC;EAC7B,MAAM;IAAEM;EAAS,CAAC,GAAGP,QAAQ,CAAC,CAAC;EAC/B,MAAMQ,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,OAAO,GAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;IAErD,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;QAC9DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAET;QAAQ,CAAC;MACpC,CAAC,CAAC;MAEF,IAAI,CAACG,QAAQ,CAACO,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;MACpC;;MAEA;MACAV,YAAY,CAACW,UAAU,CAAC,cAAc,CAAC;MACvCX,YAAY,CAACW,UAAU,CAAC,eAAe,CAAC;MACxCX,YAAY,CAACW,UAAU,CAAC,MAAM,CAAC;;MAE/B;MACAhB,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;MAEbC,QAAQ,CAAC,oBAAoB,EAAE,SAAS,CAAC;MACzCC,QAAQ,CAAC,QAAQ,CAAC;IACtB,CAAC,CAAC,OAAOe,CAAC,EAAE;MACRhB,QAAQ,CAACgB,CAAC,CAACC,OAAO,EAAE,OAAO,CAAC;IAChC;EACJ,CAAC;EAED,oBACIrB,OAAA;IAAKsB,SAAS,EAAC,SAAS;IAAAC,QAAA,eAEpBvB,OAAA;MAAKwB,OAAO,EAAElB,YAAa;MAACmB,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAU,CAAE;MAAAH,QAAA,EAAC;IAE1D;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAC5B,EAAA,CA5CuBD,OAAO;EAAA,QACPH,OAAO,EACND,QAAQ,EACZD,WAAW;AAAA;AAAAmC,EAAA,GAHR9B,OAAO;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}