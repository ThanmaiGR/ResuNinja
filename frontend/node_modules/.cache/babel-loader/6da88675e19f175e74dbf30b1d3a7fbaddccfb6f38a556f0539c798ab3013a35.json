{"ast":null,"code":"var _jsxFileName = \"D:\\\\FullStack\\\\ResuNinja\\\\frontend\\\\src\\\\context\\\\AlertContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/AlertContext.js\nimport { createContext, useState, useCallback, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AlertContext = /*#__PURE__*/createContext();\nexport const useAlert = () => {\n  _s();\n  return useContext(AlertContext);\n};\n_s(useAlert, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AlertProvider({\n  children\n}) {\n  _s2();\n  const [alerts, setAlerts] = useState([]);\n  const addAlert = useCallback(message => {\n    console.log(message);\n    const id = Date.now(); // Unique ID for each alert\n    setAlerts(prev => [...prev, {\n      id,\n      message\n    }]);\n\n    // Automatically remove alert after 3 seconds\n    setTimeout(() => removeAlert(id), 3000);\n  }, []);\n  const removeAlert = useCallback(id => {\n    setAlerts(prev => prev.filter(alert => alert.id !== id));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AlertContext.Provider, {\n    value: {\n      alerts,\n      addAlert,\n      removeAlert\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_s2(AlertProvider, \"iaNuWYvYXuFbeyKX+0PLK11FfkE=\");\n_c = AlertProvider;\nvar _c;\n$RefreshReg$(_c, \"AlertProvider\");","map":{"version":3,"names":["createContext","useState","useCallback","useContext","jsxDEV","_jsxDEV","AlertContext","useAlert","_s","AlertProvider","children","_s2","alerts","setAlerts","addAlert","message","console","log","id","Date","now","prev","setTimeout","removeAlert","filter","alert","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/FullStack/ResuNinja/frontend/src/context/AlertContext.js"],"sourcesContent":["// src/context/AlertContext.js\r\nimport { createContext, useState, useCallback, useContext } from 'react';\r\n\r\nconst AlertContext = createContext();\r\n\r\nexport const useAlert = () => useContext(AlertContext);\r\n\r\nexport function AlertProvider({ children }) {\r\n    const [alerts, setAlerts] = useState([]);\r\n\r\n    const addAlert = useCallback((message) => {\r\n        console.log(message);\r\n        const id = Date.now(); // Unique ID for each alert\r\n        setAlerts((prev) => [...prev, { id, message }]);\r\n\r\n        // Automatically remove alert after 3 seconds\r\n        setTimeout(() => removeAlert(id), 3000);\r\n    }, []);\r\n\r\n    const removeAlert = useCallback((id) => {\r\n        setAlerts((prev) => prev.filter((alert) => alert.id !== id));\r\n    }, []);\r\n\r\n    return (\r\n        <AlertContext.Provider value={{ alerts, addAlert, removeAlert }}>\r\n            {children}\r\n        </AlertContext.Provider>\r\n    );\r\n}\r\n"],"mappings":";;;AAAA;AACA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzE,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMO,QAAQ,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAML,UAAU,CAACG,YAAY,CAAC;AAAA;AAACE,EAAA,CAA1CD,QAAQ;AAErB,OAAO,SAASE,aAAaA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EACxC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMa,QAAQ,GAAGZ,WAAW,CAAEa,OAAO,IAAK;IACtCC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;IACpB,MAAMG,EAAE,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC,CAAC;IACvBP,SAAS,CAAEQ,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;MAAEH,EAAE;MAAEH;IAAQ,CAAC,CAAC,CAAC;;IAE/C;IACAO,UAAU,CAAC,MAAMC,WAAW,CAACL,EAAE,CAAC,EAAE,IAAI,CAAC;EAC3C,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,WAAW,GAAGrB,WAAW,CAAEgB,EAAE,IAAK;IACpCL,SAAS,CAAEQ,IAAI,IAAKA,IAAI,CAACG,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACP,EAAE,KAAKA,EAAE,CAAC,CAAC;EAChE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIb,OAAA,CAACC,YAAY,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAEf,MAAM;MAAEE,QAAQ;MAAES;IAAY,CAAE;IAAAb,QAAA,EAC3DA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEhC;AAACpB,GAAA,CArBeF,aAAa;AAAAuB,EAAA,GAAbvB,aAAa;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}