{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useNavigate } from 'react-router-dom';\nimport { useAlert } from \"../context/AlertContext\";\nexport default function Logout() {\n  _s();\n  const {\n    addAlert\n  } = useAlert();\n  const navigate = useNavigate();\n  const user = localStorage.getItem('user');\n  const refresh = localStorage.getItem('refresh_token');\n  console.log(token);\n  const handleLogout = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/api/logout/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          refresh\n        })\n      });\n      if (!response.ok) {\n        // addAlert('Logout Failed', 'error');\n        throw new Error('Logout Failed');\n      }\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n      localStorage.removeItem('user');\n      addAlert('Logout successful!', 'success');\n      navigate('/');\n    } catch (e) {\n      addAlert(e.message, 'error');\n    }\n  };\n  if (user) {\n    handleLogout();\n  } else {\n    navigate('/login');\n  }\n}\n_s(Logout, \"eKCL5bwQvdEXlNBX/NKh2Sw6+kI=\", false, function () {\n  return [useAlert, useNavigate];\n});\n_c = Logout;\nvar _c;\n$RefreshReg$(_c, \"Logout\");","map":{"version":3,"names":["useNavigate","useAlert","Logout","_s","addAlert","navigate","user","localStorage","getItem","refresh","console","log","token","handleLogout","response","fetch","method","headers","body","JSON","stringify","ok","Error","removeItem","e","message","_c","$RefreshReg$"],"sources":["D:/FullStack/ResuNinja/frontend/src/components/Logout.js"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\r\nimport { useAlert } from \"../context/AlertContext\";\r\n\r\nexport default function Logout() {\r\n    const { addAlert } = useAlert();\r\n    const navigate = useNavigate();\r\n    const user = localStorage.getItem('user');\r\n    const refresh = localStorage.getItem('refresh_token');\r\n    console.log(token)\r\n    const handleLogout = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:8000/api/logout/', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                }, body: JSON.stringify({refresh}),\r\n            })\r\n\r\n            if (!response.ok) {\r\n                // addAlert('Logout Failed', 'error');\r\n                throw new Error('Logout Failed');\r\n\r\n            }\r\n            localStorage.removeItem('access_token');\r\n            localStorage.removeItem('refresh_token');\r\n            localStorage.removeItem('user');\r\n            addAlert('Logout successful!', 'success');\r\n            navigate('/')\r\n        } catch (e) {\r\n            addAlert(e.message, 'error');\r\n        }\r\n    }\r\n    if(user) {\r\n        handleLogout()\r\n    }\r\n    else{\r\n        navigate('/login')\r\n    }\r\n}"],"mappings":";AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,QAAQ,yBAAyB;AAElD,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM;IAAEC;EAAS,CAAC,GAAGH,QAAQ,CAAC,CAAC;EAC/B,MAAMI,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAMM,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EACzC,MAAMC,OAAO,GAAGF,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;EACrDE,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;EAClB,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;QAC9DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QAAEC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAACX;QAAO,CAAC;MACrC,CAAC,CAAC;MAEF,IAAI,CAACK,QAAQ,CAACO,EAAE,EAAE;QACd;QACA,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;MAEpC;MACAf,YAAY,CAACgB,UAAU,CAAC,cAAc,CAAC;MACvChB,YAAY,CAACgB,UAAU,CAAC,eAAe,CAAC;MACxChB,YAAY,CAACgB,UAAU,CAAC,MAAM,CAAC;MAC/BnB,QAAQ,CAAC,oBAAoB,EAAE,SAAS,CAAC;MACzCC,QAAQ,CAAC,GAAG,CAAC;IACjB,CAAC,CAAC,OAAOmB,CAAC,EAAE;MACRpB,QAAQ,CAACoB,CAAC,CAACC,OAAO,EAAE,OAAO,CAAC;IAChC;EACJ,CAAC;EACD,IAAGnB,IAAI,EAAE;IACLO,YAAY,CAAC,CAAC;EAClB,CAAC,MACG;IACAR,QAAQ,CAAC,QAAQ,CAAC;EACtB;AACJ;AAACF,EAAA,CAnCuBD,MAAM;EAAA,QACLD,QAAQ,EACZD,WAAW;AAAA;AAAA0B,EAAA,GAFRxB,MAAM;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}